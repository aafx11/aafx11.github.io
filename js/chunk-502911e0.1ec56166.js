(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-502911e0"],{"485e":function(t,e,n){"use strict";n.r(e);var o=n("7a23"),c=function(t){return Object(o["pushScopeId"])("data-v-d490ef46"),t=t(),Object(o["popScopeId"])(),t},l={class:"wrapper"},r={class:"test-wrapper"},i=Object(o["createTextVNode"])("点击打开顶部对话框"),s=Object(o["createTextVNode"])("点击打开居中对话框"),a={class:"wrapper"},u={class:"wrapper"},b={class:"test-wrapper"},d=Object(o["createTextVNode"])("自定义对话框内容"),f=c((function(){return Object(o["createElementVNode"])("span",null,"自定义标题",-1)})),p=c((function(){return Object(o["createElementVNode"])("button",null,"插入按钮",-1)})),m=c((function(){return Object(o["createElementVNode"])("span",null,"自定义内容,插入输入框",-1)})),w=c((function(){return Object(o["createElementVNode"])("input",null,null,-1)})),v=c((function(){return Object(o["createElementVNode"])("span",null,"自定义底部",-1)})),j={class:"wrapper"},O={class:"wrapper"},h=c((function(){return Object(o["createElementVNode"])("div",{class:"bottom"},null,-1)}));function x(t,e,n,c,x,C){var N=Object(o["resolveComponent"])("v-md-preview"),V=Object(o["resolveComponent"])("fx-button"),k=Object(o["resolveComponent"])("fx-modal");return Object(o["openBlock"])(),Object(o["createElementBlock"])(o["Fragment"],null,[Object(o["createElementVNode"])("div",l,[Object(o["createVNode"])(N,{text:c.title},null,8,["text"])]),Object(o["createElementVNode"])("div",r,[Object(o["createVNode"])(V,{type:"primary",onClick:c.showTopModal},{default:Object(o["withCtx"])((function(){return[i]})),_:1},8,["onClick"]),Object(o["createVNode"])(V,{type:"primary",onClick:c.showCenterModal},{default:Object(o["withCtx"])((function(){return[s]})),_:1},8,["onClick"]),Object(o["createVNode"])(k,{show:c.visible,bottomShow:!0,titleText:"基础对话框",contentText:"内容部分",width:500,onClose:c.closeModal,onConfirm:c.confirm,position:c.position},null,8,["show","onClose","onConfirm","position"])]),Object(o["createElementVNode"])("div",a,[Object(o["createVNode"])(N,{text:c.base},null,8,["text"])]),Object(o["createElementVNode"])("div",u,[Object(o["createVNode"])(N,{text:c.self},null,8,["text"])]),Object(o["createElementVNode"])("div",b,[Object(o["createVNode"])(V,{type:"primary",onClick:c.show},{default:Object(o["withCtx"])((function(){return[d]})),_:1},8,["onClick"]),Object(o["createVNode"])(k,{show:c.state,bottomShow:!0,width:500,onClose:c.close,onConfirm:c.confirmClick},{title:Object(o["withCtx"])((function(){return[f,p]})),content:Object(o["withCtx"])((function(){return[m,w]})),bottom:Object(o["withCtx"])((function(){return[v,Object(o["createElementVNode"])("button",{onClick:e[0]||(e[0]=function(){return c.close&&c.close.apply(c,arguments)})},"取消")]})),_:1},8,["show","onClose","onConfirm"])]),Object(o["createElementVNode"])("div",j,[Object(o["createVNode"])(N,{text:c.selfHtml},null,8,["text"])]),Object(o["createElementVNode"])("div",O,[Object(o["createVNode"])(N,{text:c.desc},null,8,["text"])]),h],64)}var C={name:"aafxModal",setup:function(){var t=Object(o["ref"])(!1),e=Object(o["ref"])("top"),n=function(){e.value="top",t.value=!0},c=function(){e.value="center",t.value=!0},l=function(){t.value=!1},r=function(){console.log("点击确定"),t.value=!1},i=Object(o["ref"])(!1),s=function(){i.value=!0},a=function(){i.value=!1},u=function(){console.log("点击确定"),i.value=!1},b=Object(o["ref"])("# Modal 对话框\n模态对话框。\n## 何时使用\n需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 Modal 在当前页面正中打开一个浮层，承载相应的操作。\n## 基础用法\n需要设置 show 属性，它接收 Boolean，当为 true 时显示 Modal。 Modal 分为三个部分：title , content 和 bottom, 底部 bottom 默认不显示,需要设置 bottomShow 属性，它接收 Boolean ,当它为 true 时显示底部区域。可用具名为 title， content， bottom的 slot来自定义标题，内容和底部。使用 width 属性定义对话框的宽度。\ntitleText 属性定义标题文字, contentText 属性定义内容部分文字, position 属性定义对话框出现的位置\n@confirm:确定事件, @close:关闭事件"),d=Object(o["ref"])('### 代码\n``` html\n<template>\n    <fx-button type="primary" @click="showTopModal">点击打开顶部对话框</fx-button>\n    <fx-button type="primary" @click="showCenterModal">点击打开居中对话框</fx-button>\n    <fx-modal :show="visible" :bottomShow="true" titleText="基础对话框" \n       contentText="内容部分" :width="500" @close="closeModal" @confirm="confirm" :position="position"></fx-modal>\n</template>\n\n<script>\nimport {ref} from "vue"\n setup() {\n    const visible = ref(false);\n    const position = ref(\'top\')\n\n    const showTopModal = () => {\n      position.value = \'top\'\n      visible.value = true;\n    };\n    const showCenterModal = () => {\n      position.value = \'center\'\n      visible.value = true;\n    };\n\n    const closeModal = () => {\n      visible.value = false;\n    };\n\n    const confirm = () =>{\n      console.log(\'点击确定\');\n      visible.value = false;\n    }\nreturn{ visible,position,showModal,closeModal,confirm}\n}\n<\/script>\n```'),f=Object(o["ref"])("## 自定义内容\n可用title， content， bottom的具名插槽 slot，自定义标题，内容和底部。"),p=Object(o["ref"])('### 代码\n``` html\n  <fx-button type="primary" @click="show">自定义对话框内容</fx-button>\n  <fx-modal :show="state" :bottomShow="true"  :width="500" @close="close" @confirm="confirmClick">\n      <template #title>\n        <span>自定义标题</span>\n        <button>插入按钮</button>\n      </template>\n      <template #content>\n        <span>自定义内容,插入输入框</span>\n        <input>\n      </template>\n      <template #bottom>\n        <span>自定义底部</span>\n        <button @click="close">取消</button>\n      </template>\n    </fx-modal>\n  </div>\n<script>\nimport {ref} from "vue"\n setup() {\n  const state = ref(false)\n\n    const show = () => {\n      state.value = true\n    }\n\n    const close = () => {\n      state.value = false\n    }\n\n    const confirmClick = () =>{\n      console.log(\'点击确定\');\n      state.value = false;\n    }\n\n  return {state,show,close,confirmClick}\n}\n<\/script>\n```'),m=Object(o["ref"])("## Modal属性\n|属性|说明|类型|可选值|\n|-|-|-|-|\n|show|是否展示对话框|boolean|true/false|\n|bottomShow|是否展示底部区域|boolean|-|\n|width|对话框宽度|number|-|\n|position|对话框显示位置|string|top/center|\n|titleText|标题文本|string|-|\n|titleTextColor|标题文本颜色|string|-|\n|titleBackground|标题区域背景颜色|string|-|\n|contentText|内容区域文本|string|-|\n|contentTextColor|内容区域文本颜色|string|-|\n|confirmText|确认按钮文本|string|-|\n|confirmBackground|确认按钮背景颜色|string|-|\n|cancelText|取消按钮文本|string|-|\n|cancelBackground|取消按钮背景颜色|string|-|\n|borderRadius|圆角边框|number|-|\n|borderBottomColor|内边框颜色|string|-|\n## 插槽\n|插槽名|说明|\n|-|-|\n|title|Modal标题区的内容|\n|content|Modal中间区的内容|\n|bottom|Modal底部区的内容|\n## 事件\n|事件名|说明|\n|-|-|\n|confirm|点击确定回调|\n|close|点击关闭回调|");return{visible:t,position:e,showTopModal:n,showCenterModal:c,closeModal:l,confirm:r,state:i,show:s,close:a,confirmClick:u,title:b,base:d,self:f,selfHtml:p,desc:m}}},N=(n("f54b"),n("6b0d")),V=n.n(N);const k=V()(C,[["render",x],["__scopeId","data-v-d490ef46"]]);e["default"]=k},"659b":function(t,e,n){},f54b:function(t,e,n){"use strict";n("659b")}}]);
//# sourceMappingURL=chunk-502911e0.1ec56166.js.map